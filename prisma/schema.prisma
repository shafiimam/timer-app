// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id          String    @id
  shop        String    @unique
  state       String
  isOnline    Boolean   @default(false)
  scope       String?
  expires     DateTime?
  accessToken String
  userId      BigInt?
}

model TimerLabel {
  id     String @id @default(uuid())
  day    String @default("Days")
  hour   String @default("Hrs")
  minute String @default("Mins")
  second String @default("Secs")
  Timer  Timer?
}

model Translation {
  id        String  @id @default(uuid())
  language  String
  title     String
  subHeadig String
  timerID   String?
  Timer     Timer?  @relation(fields: [timerID], references: [id])
}

model CountDownToDateTimerType {
  id               String    @id @default(uuid())
  startRightNow    Boolean
  startDate        DateTime?
  endDate          DateTime?
  onceEnds         String? // options: "unpublish", "showCustomTitle", "donothing"
  customTitle      String?
  customSubHeading String?
  timer            Timer     @relation(fields: [timerId], references: [id])
  timerId          String    @unique
}

model FixedMinTimerType {
  id               String  @id @default(uuid())
  duration         Int
  onceEnds         String? // options: "unpublish", "showCustomTitle", "donothing"
  customTitle      String?
  customSubHeading String?
  timer            Timer   @relation(fields: [timerId], references: [id])
  timerId          String  @unique
}

model DailyRecurringTimerType {
  id               String   @id @default(uuid())
  daysOfWeek       String[] // Options: "monday", "tuesday", ..., "sunday"
  dailyStartTime   DateTime
  dailyEndTime     DateTime
  customTitle      String?
  customSubHeading String?
  startToday       Boolean
  neverEnds        Boolean
  startDate        DateTime
  endDate          DateTime
  onceEnds         String? // options: "unpublish", "showCustomTitle", "donothing"
  timerId          String   @unique
  timer            Timer    @relation(fields: [timerId], references: [id])
}

model CartPageTimerType {
  id       String  @id @default(uuid())
  timerId  String  @unique
  minutes  Int     @default(10)
  onceEnds String? @default("repeatTimer") // options: "repeat", "hide", "delete Items"
  timer    Timer   @relation(fields: [timerId], references: [id])
}

model TimerStyle {
  id                          String  @id @default(uuid())
  template                    String  @default("custom")
  position                    String  @default("top") // option "top, bottom"
  stickyTimer                 Boolean @default(false)
  cardBackgroundType          String  @default("plain") // option "plain, gradient"
  cardBackgroundColor         String  @default("#FFFFFF")
  cardBackgroundGradientStart String  @default("#FFFFFF")
  cardBackgroundGradientEnd   String  @default("#DDDDDD")
  cardBackgroundGradientAngle Int     @default(90)
  borderRadius                Int     @default(10)
  borderSize                  Int     @default(2)
  borderColor                 String  @default("#000000")
  spacingTop                  Int     @default(20)
  spacingBottom               Int     @default(20)
  spacingLeft                 Int     @default(20)
  spacingRight                Int     @default(20)
  font                        String  @default("default") //option "default, Helvetica, Tahoma, Trebuchet MS, Georgia, Garamond, serif"
  titleSize                   Int     @default(20)
  titleColor                  String  @default("#000000")
  subHeadingSize              Int     @default(14)
  subHeadingColor             String  @default("#000000")
  timerSize                   Int     @default(30)
  timerColor                  String  @default("#000000")
  timerLegendSize             Int     @default(14)
  timerLegendColor            String  @default("#000000")
  closeIconColor              String  @default("#000000")
  Timer                       Timer[]
}

model TimerPlacementType {
  id                            String   @id @default(uuid())
  timerType                     String
  selectedProducts              String[]
  selectedProductTags           String[]
  showOnAllCountries            Boolean  @default(true)
  selectedCountries             String[]
  showOnEveryPage               Boolean  @default(true)
  showOnHomePageOnly            Boolean
  showOnAllProductsPage         Boolean
  showOnSpecificProductsPage    Boolean
  showOnSpecificProductTagsPage Boolean
  showOnAllCollectionPages      Boolean
  showOnSpecificCollectionsPage Boolean
  selectedCollections           String[]
  showOnCustomPosition          Boolean
  showOnPasswordPage            Boolean
}

model Timer {
  id                   String                    @id @default(uuid())
  type                 String
  name                 String
  title                String
  subHeadig            String
  timerLabelId         String                    @unique
  timerLabel           TimerLabel                @relation(fields: [timerLabelId], references: [id])
  translationIds       String[]
  translation          Translation[]
  timerType            String                    @default("countDownToDate")
  countdownToDateTimer CountDownToDateTimerType?
  FixedMinTimer        FixedMinTimerType?
  dailyRecurringTimer  DailyRecurringTimerType?
  cartPageTimer        CartPageTimerType?
  timerStyleId         String                    @unique
  timerStyle           TimerStyle                @relation(fields: [timerStyleId], references: [id])
  timerPlacement       String                    @default("top")
  callToAction         String // option "whole, button ,none"
  closeIcon            Boolean
}
